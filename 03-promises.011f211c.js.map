{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QACxBD,SAASC,cAAc,YAInC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAO,C,SAAER,E,MAAUC,GAEzBQ,YAAW,KACLJ,GACFF,EAAQK,GAEVJ,EAAOI,EAAK,GACXP,EAAM,G,CAZbL,EAAKc,iBAAiB,UAgBtB,SAAkBC,GAChBA,EAAMC,iBACN,MAAQX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cACtC,IAAIC,EAAeC,OAAOL,EAAMM,OAChC,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EAC5B,IAANA,IACFH,GAAgBC,OAAOJ,EAAKK,QAE9BpB,EAAcqB,EAAGH,GACdI,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA4B,OAAOC,QAAQ,qBAAqBvB,QAAeC,MAAU,IAE9DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA4B,OAAOG,QAAQ,oBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst btn = document.querySelector('[submit]');\n\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const data = { position, delay };\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(data);\n      }\n      reject(data);\n    }, delay);\n  });\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  let promiseDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    if (i !== 1) {\n      promiseDelay += Number(step.value);\n    }\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","data","setTimeout","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","promiseDelay","Number","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.011f211c.js.map"}