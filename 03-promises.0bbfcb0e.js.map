{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QACxBD,SAASC,cAAc,YAInC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAO,CAAER,WAAUC,SAEzBQ,YAAW,WACLJ,GACFF,EAAQK,GAEVJ,EAAOI,E,GACNP,E,IAZPL,EAAKc,iBAAiB,UAgBtB,SAAkBC,GAChBA,EAAMC,iBAGN,IAFA,IAAgCC,EAAAF,EAAMG,cAA9BC,EAAwBF,EAAxBZ,MAAOe,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAeC,OAAOJ,EAAMK,OACvBC,EAAI,EAAGA,GAAKJ,EAAOG,MAAOC,GAAK,EAC5B,IAANA,IACFH,GAAgBC,OAAOH,EAAKI,QAE9BrB,EAAcsB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBP,EAAA8B,OAAOC,QAAQ,qBAAoCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE1D0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBP,EAAA8B,OAAOI,QAAQ,oBAAmCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst btn = document.querySelector('[submit]');\n\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const data = { position, delay };\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(data);\n      }\n      reject(data);\n    }, delay);\n  });\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  let promiseDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    if (i !== 1) {\n      promiseDelay += Number(step.value);\n    }\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","data","setTimeout","addEventListener","event","preventDefault","_currentTarget","currentTarget","delay1","step","amount","promiseDelay","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0bbfcb0e.js.map"}